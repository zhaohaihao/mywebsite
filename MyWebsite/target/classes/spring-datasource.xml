<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	
	<context:component-scan base-package="com.zhh.personal"/>
	
	<!-- 解密配置 -->
	<bean class="com.zhh.common.PropertyMPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:init.cla</value>
			</list>
		</property>
		<property name="initLocation">
			<value>classpath:initLocation.cla</value>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	
	<!-- 读取配置 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:init.cla</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8"/>
	</bean>
	
	<!-- druid 数据库连接池 -->
	<bean id="sqlDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 数据库的基本配置信息 -->
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="1"/>
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="10"/>
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="20"/>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000"/>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000"/>
		<property name="testWhileIdle" value="true" />
		<!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
		<property name="testOnBorrow" value="true" /> 
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
		<property name="poolPreparedStatements" value="true" /> 
		<property name="maxPoolPreparedStatementPerConnectionSize" 
		   value="20" />
		<!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
		<!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
		<property name="validationQuery" value="select 1 " /> 
		  <property name="filters" value="stat" /> 
		  <property name="proxyFilters"> 
		   <list> 
		    <ref bean="logFilter" /> 
		   </list> 
		  </property> 
	  </bean>
	  
	  <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
	  	<property name="statementExecutableSqlLogEnable" value="false"/>
	  </bean>
	  
	  <!-- 配置druid监控spring jdbc -->
	  <bean id="druid-stat-interceptor"
        class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	  </bean>
	  
	  
	  <!-- SessionFactory 配置, 配置model 和对应的xml映射文件 的session -->
	  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="sqlDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.zhh.personal.entity" />
		<!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。  
         *是个通配符，代表所有的文件，**代表所有目录下 -->  
<!--     <property name="mapperLocations" value="classpath:com/test/mapper/mysql/**/*.xml" />   -->
	  </bean>
	  
	  <!-- 扫描mybatis映射接口类 -->
	  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zhh.personal.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	 </bean>
</beans>





